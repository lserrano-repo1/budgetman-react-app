
-- open DB
--sqlplus / as sysdba
--ALTER PLUGGABLE DATABASE ORCLPDB OPEN;

-- delete tables sequence 
DROP TABLE BUDGETMAN."TRANSACTION";
DROP TABLE BUDGETMAN.ACCOUNT;
DROP TABLE BUDGETMAN.USERDATA;
DROP TABLE BUDGETMAN.BANK;
DROP TABLE BUDGETMAN.EXCHGRATE;
DROP TABLE BUDGETMAN.CURRENCY;
DROP TABLE BUDGETMAN.CATEGORIES;
DROP TABLE BUDGETMAN.TRANTYPE;
COMMIT;


/* table creation scripts */


/* create user data (USERDATA) table */
CREATE TABLE BUDGETMAN.USERDATA (
	USR_ID number GENERATED BY DEFAULT AS IDENTITY,
	USR_SALUTATION varchar2(25),
	USR_FIRST_NAME varchar2(80),
	USR_LAST_NAME varchar2(80),
	USR_EMAIL varchar2(100),
	USR_PASSWORD varchar2(100),
	USR_TOKEN varchar2(1000),
	USR_CREATION_DATE DATE DEFAULT sysdate,
	USR_LAST_MODIFIED DATE,
	PRIMARY KEY(USR_ID)
);


/* create table BANK */
CREATE TABLE BUDGETMAN.BANK (
	BNK_ID NUMBER GENERATED BY DEFAULT AS IDENTITY ,
	BNK_NAME varchar2(80),
	BNK_ADDRESS varchar2(250),
	BNK_CONTACT varchar2(100),
	BNK_CONTACT_EMAIL varchar2(100),
	BNK_CREATION_DATE DATE DEFAULT sysdate,
	BNK_LAST_MODIFIED DATE,
	PRIMARY KEY (BNK_ID)
);

/* Transaction types */
CREATE TABLE BUDGETMAN.TRANTYPE (
	TYP_ID NUMBER GENERATED BY DEFAULT AS IDENTITY ,
	TYP_NAME varchar2(80),
	PRIMARY KEY (TYP_ID)
);


/* Categories */
CREATE TABLE BUDGETMAN.CATEGORIES (
	CAT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
	CAT_NAME varchar2(100),
	PRIMARY KEY(CAT_ID)
);


/* Currencies */
CREATE TABLE BUDGETMAN.CURRENCY(
	CUR_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
	CUR_NAME varchar2(100),
	CUR_ABBREVIATION varchar2(5),
	PRIMARY KEY(CUR_ID)
);


/* Exchange rates */
CREATE TABLE BUDGETMAN.EXCHGRATE(
	EXC_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
	CUR_ID NUMBER, 
	EXC_LAST_UPDATE DATE,
	EXC_VALUE NUMBER(9,4),
	EXC_CURRENCY_REF varchar2(50),
	PRIMARY KEY(EXC_ID),
	FOREIGN KEY(CUR_ID) REFERENCES BUDGETMAN.CURRENCY(CUR_ID)  
);

/* Account */ 
CREATE TABLE BUDGETMAN.ACCOUNT (
	ACC_ID NUMBER GENERATED BY DEFAULT AS IDENTITY ,
	USR_ID NUMBER ,
	BNK_ID NUMBER ,
	CUR_ID NUMBER,
	ACC_NUMBER varchar2(100),
	ACC_CREATION_DATE DATE DEFAULT sysdate,
	ACC_LAST_UPDATED DATE,
	ACC_BALANCE NUMBER(*,4),
	PRIMARY KEY (ACC_ID),
	FOREIGN KEY(USR_ID) REFERENCES BUDGETMAN.USERDATA(USR_ID),
	FOREIGN KEY(BNK_ID) REFERENCES BUDGETMAN.BANK(BNK_ID),
	FOREIGN KEY(CUR_ID) REFERENCES BUDGETMAN.CURRENCY(CUR_ID)
);


/* Transaction */
CREATE TABLE BUDGETMAN.TRANSACTION (
	TRN_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
	CUR_ID NUMBER,
	ACC_ID NUMBER,
	CAT_ID NUMBER,
	TYP_ID NUMBER,
	TRN_CREATION_DATE DATE DEFAULT sysdate,
	TRN_AMOUNT NUMBER(*,4),
	TRN_DESCRIPTION varchar2(500),
	PRIMARY KEY(TRN_ID),
	FOREIGN KEY(CUR_ID) REFERENCES BUDGETMAN.CURRENCY(CUR_ID),
	FOREIGN KEY(ACC_ID) REFERENCES BUDGETMAN.ACCOUNT(ACC_ID),
	FOREIGN key(CAT_ID) REFERENCES BUDGETMAN.CATEGORIES(CAT_ID),
	FOREIGN KEY(TYP_ID) REFERENCES BUDGETMAN.TRANTYPE(TYP_ID)
);
COMMIT;


-------------------------------------------------------------------
-- INITIAL DATA
-------------------------------------------------------------------

--create users
INSERT INTO BUDGETMAN.USERDATA(USR_SALUTATION, USR_FIRST_NAME, USR_LAST_NAME, USR_EMAIL, USR_PASSWORD, USR_TOKEN)  
	VALUES ('Sr.','Carlos','Vallarta','carlos.vallarta@gmail.com', 'x5rs44T44sSS4S','tokentoken');

--create bank
INSERT INTO BUDGETMAN.BANK (BNK_NAME, BNK_ADDRESS, BNK_CONTACT, BNK_CONTACT_EMAIL) VALUES ('CITY Bank', 'Centro Financiero Gigante', 'Erlinda Smith', 'erlinda.smith@citi.bank.sv');

--create categories
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Meals');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Transportation');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Recreation');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Travels');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Maintenance');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Studies');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Supermarket');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Clothes');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Shoes');
INSERT INTO BUDGETMAN.CATEGORIES (cat_name) values ('Other shooping');
COMMIT;



--create transaction type TRANTYPE
INSERT INTO BUDGETMAN.TRANTYPE (TYP_NAME) VALUES ('INCOME');
INSERT INTO BUDGETMAN.TRANTYPE (TYP_NAME) VALUES ('EXPENSE');


--create currencies
INSERT INTO BUDGETMAN.CURRENCY (cur_name,CUR_ABBREVIATION) VALUES ('EURO', 'EUR');
INSERT INTO BUDGETMAN.CURRENCY (cur_name,CUR_ABBREVIATION) VALUES ('USA DOLLAR', 'USD');
INSERT INTO BUDGETMAN.CURRENCY (cur_name,CUR_ABBREVIATION) VALUES ('CANADA DOLLAR', 'CAD');
COMMIT;


--create token generator
CREATE OR REPLACE FUNCTION BUDGETMAN.TOKEN_GENERATOR(password_secret VARCHAR2) RETURN VARCHAR2
IS
	VRESULT VARCHAR2(4000);
BEGIN
	SELECT UTL_RAW.CAST_TO_VARCHAR2(UTL_I18N.STRING_TO_RAW(STANDARD_HASH(password_secret,'MD5'),'AL32UTF8')) INTO VRESULT FROM dual;
	RETURN VRESULT;
END TOKEN_GENERATOR;
